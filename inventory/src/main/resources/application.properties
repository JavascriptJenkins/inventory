## techvvs application settings ##

## need this otherwise cookies go in redriect uri
server.servlet.session.tracking-modes=cookie

load.ref.data=${LOAD_REF_DATA:no}
tax.percentage=${TAX_PERCENTAGE:0}
base.qr.domain=${BASE_QR_DOMAIN:}

## dev1 will make it skip email activation
## change to prod for deploying
## envs are dev1,prod
spring.profiles.active=${ENVIRONMENT_NAME:prod}
server.port=8081

security.jwt.token.secret-key=${JWT_SECRET_KEY:}


#server.servlet.context-path=/api
spring.web.resources.static-locations=classpath:/static/

logging.file.name=logs/sb-logs.log

## Api keys
twilio.api.username=${TWILIO_API_USER:}
twilio.api.password=${TWILIO_API_PASSWORD:}
sendgrid.api.key=${SENDGRID_API_KEY:}


## Thymeleaf cache needs to be set to false for hot reload while developing
spring.thymeleaf.cache=false
spring.thymeleaf.mode=HTML
spring.thymeleaf.encoding=UTF-8
# change load path to resource folder instead of /target
spring.thymeleaf.prefix=classpath:/templates/
spring.resources.add-mappings=true
spring.resources.static-locations=classpath:/static/
spring.resources.cache.period=0


## start postgresql database settings:
## start postgresql database settings:
#spring.datasource.url=jdbc:postgresql://localhost:5432/northstar1
spring.datasource.url=${DB_URI:}
# The driver class name is optional; Spring Boot can usually figure this out.
spring.datasource.driver-class-name=${DB_DRIVER_CLASS_NAME:org.postgresql.Driver}
spring.jpa.database-platform=${DB_JPA_DATABASE_PLATFORM:org.hibernate.dialect.PostgreSQLDialect}
spring.jpa.properties.hibernate.dialect=${DB_JPA_HIBERNATE_DIALECT:org.hibernate.dialect.PostgreSQLDialect}


##Database settings shared by all databases
## password needs to be "password" for dev env
spring.datasource.username=${DB_USERNAME:postgres}
spring.datasource.password=${DB_PASSWORD:password}
spring.jpa.hibernate.ddl-auto=${SPRING_DATABASE_ACTION:update}

## start h2 database settings
## The database will be filled at startup with data from data.sql
## spring.datasource.url defines the flatfile used to store our database data
#spring.datasource.url=jdbc:h2:file:./data/demo
#spring.datasource.driverClassName=org.h2.Driver
#spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.h2.console.enabled=${DB_H2_CONSOLE_ENABLED:false}
## below property will make sure spring picks up data.sql file
#spring.sql.init.mode=always
spring.h2.console.settings.web-allow-others=${DB_H2_WEB_ALLOWOTHERS:false}
#spring.jpa.hibernate.ddl-auto=update
## end h2 database settings

## below property will make sure spring picks up data.sql file
#spring.sql.init.mode=always
#spring.h2.console.settings.web-allow-others=true
#spring.jpa.hibernate.ddl-auto=update

## QR MODE
qr.mode.leafly=true
qr.mode.media=true

spring.servlet.multipart.max-file-size=${MAX_FILE_SIZE:500MB}
spring.servlet.multipart.max-request-size=${MAX_REQ_SIZE:500MB}

## devtools logging
logging.level.web=DEBUG


