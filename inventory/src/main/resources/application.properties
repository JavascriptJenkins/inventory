## techvvs application settings ##

load.ref.data=${LOAD_REF_DATA:no}
base.qr.domain=${BASE_QR_DOMAIN:https://northstar1.techvvs.io}

## dev1 will make it skip email activation
## change to prod for deploying
## envs are dev1,prod
spring.profiles.active=${ENVIRONMENT_NAME:dev1}

#server.servlet.context-path=/api
spring.web.resources.static-locations=classpath:/static/

logging.file.name=logs/sb-logs.log

## Api keys
twilio.api.username=
twilio.api.password=
sendgrid.api.key=


## Thymeleaf cache needs to be set to false for hot reload while developing
spring.thymeleaf.cache=false
spring.thymeleaf.mode=HTML
spring.thymeleaf.encoding=UTF-8
# change load path to resource folder instead of /target
spring.thymeleaf.prefix=file:src/main/resources/templates/
spring.resources.add-mappings=true
spring.resources.static-locations=file:src/main/resources/static/
spring.resources.cache.period=0


## To use a mysql database can use this setup
#spring.datasource.url=jdbc:mysql://localhost:3306/collegeapp?useSSL=false
#spring.datasource.username=root
#spring.datasource.password=password

## start postgresql database settings:
#spring.datasource.url=jdbc:postgresql://localhost:5432/northstar1
#spring.datasource.url=jdbc:postgresql://localhost:5432/northstar1
# The driver class name is optional; Spring Boot can usually figure this out.
spring.datasource.driver-class-name=org.postgresql.Driver
#spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect


##Database settings shared by all databases
## password needs to be "password" for dev env
spring.datasource.username=postgres
spring.datasource.password=
spring.jpa.hibernate.ddl-auto=update

## start h2 database settings
## The database will be filled at startup with data from data.sql
## spring.datasource.url defines the flatfile used to store our database data
spring.datasource.url=jdbc:h2:file:./data/demo
spring.datasource.driverClassName=org.h2.Driver
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.h2.console.enabled=true
## below property will make sure spring picks up data.sql file
#spring.sql.init.mode=always
#spring.h2.console.settings.web-allow-others=true
## end h2 database settings

## below property will make sure spring picks up data.sql file
#spring.sql.init.mode=always
spring.h2.console.settings.web-allow-others=true
#spring.jpa.hibernate.ddl-auto=update

## QR MODE
qr.mode.leafly=true

## devtools logging
logging.level.web=DEBUG

## AI Milvus vector database connection settings are below ##
spring.ai.vectorstore.milvus.client.host=localhost
spring.ai.vectorstore.milvus.client.port=19530
spring.ai.vectorstore.milvus.client.username=root
spring.ai.vectorstore.milvus.client.password=milvus
spring.ai.vectorstore.milvus.databaseName=default
spring.ai.vectorstore.milvus.collectionName=vector_store
spring.ai.vectorstore.milvus.embeddingDimension=1536
spring.ai.vectorstore.milvus.indexType=IVF_FLAT
spring.ai.vectorstore.milvus.metricType=COSINE

